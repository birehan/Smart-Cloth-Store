{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getAuth, GoogleAuthProvider, signInWithPopup } from \"firebase/auth\";\nimport { getFirestore, collection, getDocs, addDoc, updateDoc, deleteDoc, doc, getDoc } from 'firebase/firestore';\nconst config = {\n  apiKey: \"AIzaSyDFKanYXun65DroF3mKms8lwSbfLoX6szc\",\n  authDomain: \"birehan-eco-db.firebaseapp.com\",\n  projectId: \"birehan-eco-db\",\n  storageBucket: \"birehan-eco-db.appspot.com\",\n  messagingSenderId: \"185955401855\",\n  appId: \"1:185955401855:web:0933f69cb26f46219aff4a\",\n  measurementId: \"G-WN8GVTX54F\"\n};\nconst app = initializeApp(config);\nexport const auth = getAuth(app);\nconst provider = new GoogleAuthProvider(); // init services\n\nexport const db = getFirestore(app); // provider.setCustomParameters({prompt: 'select_account'}); \n\nexport const signInWithGoogle = () => {\n  signInWithPopup(auth, provider).then(result => {\n    const name = result.user.displayName;\n    const email = result.user.email;\n    console.log(result);\n  }).catch(error => console.log(error));\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return; // specific user ref\n\n  const userRef = doc(db, `users/${userAuth.uid}`);\n  const snapShot = await getDoc(userRef); // colllection ref\n\n  const colRef = collection(db, 'users'); // const snapShot = await getDocs(colRef);\n\n  console.log(\"snap\");\n  console.log(snapShot);\n  console.log(\"snap\"); // get collection data\n\n  getDocs(colRef).then(snapShot => {\n    let books = [];\n    snapShot.docs.forEach(doc => {\n      books.push({ ...doc.data(),\n        id: doc.id\n      });\n    });\n    console.log(books);\n  }).catch(err => console.log(err));\n};","map":{"version":3,"names":["initializeApp","getAuth","GoogleAuthProvider","signInWithPopup","getFirestore","collection","getDocs","addDoc","updateDoc","deleteDoc","doc","getDoc","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","auth","provider","db","signInWithGoogle","then","result","name","user","displayName","email","console","log","catch","error","createUserProfileDocument","userAuth","additionalData","userRef","uid","snapShot","colRef","books","docs","forEach","push","data","id","err"],"sources":["/home/babi/Desktop/react/fire/src/firebase/firebase.utils.js"],"sourcesContent":["import {initializeApp} from 'firebase/app';\nimport {getAuth, GoogleAuthProvider, signInWithPopup} from \"firebase/auth\"\nimport {getFirestore, collection,  getDocs,\n    addDoc,\n    updateDoc,\n    deleteDoc,\n    doc,\n    getDoc} from 'firebase/firestore';\n\nconst config = {\n    apiKey: \"AIzaSyDFKanYXun65DroF3mKms8lwSbfLoX6szc\",\n    authDomain: \"birehan-eco-db.firebaseapp.com\",\n    projectId: \"birehan-eco-db\",\n    storageBucket: \"birehan-eco-db.appspot.com\",\n    messagingSenderId: \"185955401855\",\n    appId: \"1:185955401855:web:0933f69cb26f46219aff4a\",\n    measurementId: \"G-WN8GVTX54F\"\n  };\n\nconst app = initializeApp(config);\nexport const auth = getAuth(app);\nconst provider = new GoogleAuthProvider();\n\n// init services\nexport const db = getFirestore(app);\n\n// provider.setCustomParameters({prompt: 'select_account'}); \n\nexport const signInWithGoogle = () => {\n    signInWithPopup(auth, provider).then((result) => {\n        const name = result.user.displayName;\n        const email = result.user.email;\n        console.log(result)\n    })\n    .catch(error => console.log(error))\n};\n\n\nexport const createUserProfileDocument = async(userAuth, additionalData) => {\n    if(!userAuth) return;\n\n    // specific user ref\n\n    const userRef = doc(db, `users/${userAuth.uid}`)\n    const snapShot = await getDoc(userRef);\n\n    // colllection ref\n    const colRef = collection(db, 'users');\n    // const snapShot = await getDocs(colRef);\n\n    console.log(\"snap\")\n    console.log(snapShot);\n    console.log(\"snap\")\n\n    // get collection data\n    getDocs(colRef)\n    .then((snapShot) => {\n    let books = []\n    snapShot.docs.forEach((doc) =>{\n        books.push({...doc.data(), id: doc.id})\n    })\n    console.log(books);\n    })\n    .catch(err =>console.log(err))\n}\n\n"],"mappings":"AAAA,SAAQA,aAAR,QAA4B,cAA5B;AACA,SAAQC,OAAR,EAAiBC,kBAAjB,EAAqCC,eAArC,QAA2D,eAA3D;AACA,SAAQC,YAAR,EAAsBC,UAAtB,EAAmCC,OAAnC,EACIC,MADJ,EAEIC,SAFJ,EAGIC,SAHJ,EAIIC,GAJJ,EAKIC,MALJ,QAKiB,oBALjB;AAOA,MAAMC,MAAM,GAAG;EACXC,MAAM,EAAE,yCADG;EAEXC,UAAU,EAAE,gCAFD;EAGXC,SAAS,EAAE,gBAHA;EAIXC,aAAa,EAAE,4BAJJ;EAKXC,iBAAiB,EAAE,cALR;EAMXC,KAAK,EAAE,2CANI;EAOXC,aAAa,EAAE;AAPJ,CAAf;AAUA,MAAMC,GAAG,GAAGpB,aAAa,CAACY,MAAD,CAAzB;AACA,OAAO,MAAMS,IAAI,GAAGpB,OAAO,CAACmB,GAAD,CAApB;AACP,MAAME,QAAQ,GAAG,IAAIpB,kBAAJ,EAAjB,C,CAEA;;AACA,OAAO,MAAMqB,EAAE,GAAGnB,YAAY,CAACgB,GAAD,CAAvB,C,CAEP;;AAEA,OAAO,MAAMI,gBAAgB,GAAG,MAAM;EAClCrB,eAAe,CAACkB,IAAD,EAAOC,QAAP,CAAf,CAAgCG,IAAhC,CAAsCC,MAAD,IAAY;IAC7C,MAAMC,IAAI,GAAGD,MAAM,CAACE,IAAP,CAAYC,WAAzB;IACA,MAAMC,KAAK,GAAGJ,MAAM,CAACE,IAAP,CAAYE,KAA1B;IACAC,OAAO,CAACC,GAAR,CAAYN,MAAZ;EACH,CAJD,EAKCO,KALD,CAKOC,KAAK,IAAIH,OAAO,CAACC,GAAR,CAAYE,KAAZ,CALhB;AAMH,CAPM;AAUP,OAAO,MAAMC,yBAAyB,GAAG,OAAMC,QAAN,EAAgBC,cAAhB,KAAmC;EACxE,IAAG,CAACD,QAAJ,EAAc,OAD0D,CAGxE;;EAEA,MAAME,OAAO,GAAG5B,GAAG,CAACa,EAAD,EAAM,SAAQa,QAAQ,CAACG,GAAI,EAA3B,CAAnB;EACA,MAAMC,QAAQ,GAAG,MAAM7B,MAAM,CAAC2B,OAAD,CAA7B,CANwE,CAQxE;;EACA,MAAMG,MAAM,GAAGpC,UAAU,CAACkB,EAAD,EAAK,OAAL,CAAzB,CATwE,CAUxE;;EAEAQ,OAAO,CAACC,GAAR,CAAY,MAAZ;EACAD,OAAO,CAACC,GAAR,CAAYQ,QAAZ;EACAT,OAAO,CAACC,GAAR,CAAY,MAAZ,EAdwE,CAgBxE;;EACA1B,OAAO,CAACmC,MAAD,CAAP,CACChB,IADD,CACOe,QAAD,IAAc;IACpB,IAAIE,KAAK,GAAG,EAAZ;IACAF,QAAQ,CAACG,IAAT,CAAcC,OAAd,CAAuBlC,GAAD,IAAQ;MAC1BgC,KAAK,CAACG,IAAN,CAAW,EAAC,GAAGnC,GAAG,CAACoC,IAAJ,EAAJ;QAAgBC,EAAE,EAAErC,GAAG,CAACqC;MAAxB,CAAX;IACH,CAFD;IAGAhB,OAAO,CAACC,GAAR,CAAYU,KAAZ;EACC,CAPD,EAQCT,KARD,CAQOe,GAAG,IAAGjB,OAAO,CAACC,GAAR,CAAYgB,GAAZ,CARb;AASH,CA1BM"},"metadata":{},"sourceType":"module"}