{"ast":null,"code":"import orderTypes from \"./order.types\";\nconst INITIAL_STATE = {\n  orders: [],\n  totalQuantity: 0,\n  totalPrice: 0\n};\n\nconst orderReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case orderTypes.ADD_TO_ORDER:\n      {\n        let is_order_exist = false;\n        let index = -1;\n\n        for (let i = 0; i < state.orders.length; i++) {\n          if (state.orders[i].id === action.payload.id) {\n            is_order_exist = true;\n            break;\n          }\n        }\n\n        return { ...state,\n          orders: is_order_exist ? [...state.orders.slice()] : [...state.orders, action.payload],\n          totalQuantity: state.totalQuantity + 1,\n          totalPrice: state.totalPrice + action.payload.price\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default orderReducer;","map":{"version":3,"names":["orderTypes","INITIAL_STATE","orders","totalQuantity","totalPrice","orderReducer","state","action","type","ADD_TO_ORDER","is_order_exist","index","i","length","id","payload","slice","price"],"sources":["/home/babi/Desktop/react/fire/src/redux/order/order.reducer.js"],"sourcesContent":["import orderTypes from \"./order.types\"\n\nconst INITIAL_STATE = {\n    orders: [],\n    totalQuantity: 0,\n    totalPrice: 0\n}\n\nconst orderReducer = (state = INITIAL_STATE, action) => {\n    switch (action.type){\n        case orderTypes.ADD_TO_ORDER: {\n            let is_order_exist = false;\n            let index = -1;\n            for(let i=0; i< state.orders.length; i++){\n                if(state.orders[i].id === action.payload.id){\n                    is_order_exist = true;\n                    \n                    break;\n                }\n            }\n            return {\n                ...state,\n                orders: is_order_exist ? [...state.orders.slice()] : [...state.orders, action.payload],\n                totalQuantity: state.totalQuantity +  1,\n                totalPrice: state.totalPrice + action.payload.price\n\n            }\n        }\n        default:\n            return state;\n    }\n}\n\nexport default orderReducer;"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,eAAvB;AAEA,MAAMC,aAAa,GAAG;EAClBC,MAAM,EAAE,EADU;EAElBC,aAAa,EAAE,CAFG;EAGlBC,UAAU,EAAE;AAHM,CAAtB;;AAMA,MAAMC,YAAY,GAAG,YAAmC;EAAA,IAAlCC,KAAkC,uEAA1BL,aAA0B;EAAA,IAAXM,MAAW;;EACpD,QAAQA,MAAM,CAACC,IAAf;IACI,KAAKR,UAAU,CAACS,YAAhB;MAA8B;QAC1B,IAAIC,cAAc,GAAG,KAArB;QACA,IAAIC,KAAK,GAAG,CAAC,CAAb;;QACA,KAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAEN,KAAK,CAACJ,MAAN,CAAaW,MAA7B,EAAqCD,CAAC,EAAtC,EAAyC;UACrC,IAAGN,KAAK,CAACJ,MAAN,CAAaU,CAAb,EAAgBE,EAAhB,KAAuBP,MAAM,CAACQ,OAAP,CAAeD,EAAzC,EAA4C;YACxCJ,cAAc,GAAG,IAAjB;YAEA;UACH;QACJ;;QACD,OAAO,EACH,GAAGJ,KADA;UAEHJ,MAAM,EAAEQ,cAAc,GAAG,CAAC,GAAGJ,KAAK,CAACJ,MAAN,CAAac,KAAb,EAAJ,CAAH,GAA+B,CAAC,GAAGV,KAAK,CAACJ,MAAV,EAAkBK,MAAM,CAACQ,OAAzB,CAFlD;UAGHZ,aAAa,EAAEG,KAAK,CAACH,aAAN,GAAuB,CAHnC;UAIHC,UAAU,EAAEE,KAAK,CAACF,UAAN,GAAmBG,MAAM,CAACQ,OAAP,CAAeE;QAJ3C,CAAP;MAOH;;IACD;MACI,OAAOX,KAAP;EApBR;AAsBH,CAvBD;;AAyBA,eAAeD,YAAf"},"metadata":{},"sourceType":"module"}