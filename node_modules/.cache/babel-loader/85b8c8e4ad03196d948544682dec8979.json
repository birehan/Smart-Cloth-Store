{"ast":null,"code":"// import {initializeApp} from 'firebase/app';\n// import {getAuth, GoogleAuthProvider, signInWithPopup} from \"firebase/auth\"\n// import {getFirestore, \n//     doc,\n//     setDoc,\n//     getDoc} from 'firebase/firestore';\n// const config = {\n//     apiKey: \"AIzaSyDFKanYXun65DroF3mKms8lwSbfLoX6szc\",\n//     authDomain: \"birehan-eco-db.firebaseapp.com\",\n//     projectId: \"birehan-eco-db\",\n//     storageBucket: \"birehan-eco-db.appspot.com\",\n//     messagingSenderId: \"185955401855\",\n//     appId: \"1:185955401855:web:0933f69cb26f46219aff4a\",\n//     measurementId: \"G-WN8GVTX54F\"\n//   };\n// const app = initializeApp(config);\n// export const auth = getAuth(app);\n// const provider = new GoogleAuthProvider();\n// // init services\n// export const db = getFirestore(app);\n// // provider.setCustomParameters({prompt: 'select_account'}); \n// export const signInWithGoogle = () => {\n//     signInWithPopup(auth, provider).then((result) => {\n//         console.log(result)\n//     })\n//     .catch(error => console.log(error))\n// };\n// export const createUserProfileDocument = async(userAuth, additionalData) => {\n//     if(!userAuth) return;\n//     const userRef = doc(db, \"users\", userAuth.uid);\n//     const userSnapshot = await getDoc(userRef);\n//     if (!userSnapshot.exists()){\n//         const {displayName, email} = userAuth;\n//         const createdAt = new Date();\n//         try{\n//             await setDoc(userRef, {\n//                 displayName,\n//                 email,\n//                 createdAt,\n//                 ...additionalData\n//             })\n//             console.log(\"document ID: \" + userRef.id)\n//         }\n//         catch(error){\n//             console.log(\"error: \", reportError)\n//         }\n//     }\n//     return userRef;\n// }\n// const colRef = collection(db, 'users');\n// const snapShot = await getDocs(colRef);\n// const querySnapshot = await getDocs(collection(db, \"users\"));\n// let userExist = false;\n// querySnapshot.forEach((doc) =>{\n//     if (doc.id == userAuth.uid) userExist = true\n//     })\n// if (! userExist){\n//     const {displayName, email} = userAuth;\n//     const createdAt = new Date();\n//     try{\n//         const docRef = await addDoc(collection(db, \"users\"), {\n//             displayName,\n//             email,\n//             createdAt,\n//             ...additionalData\n//         });\n//         console.log(\"document ID: \" + docRef.id)\n//     }\n//     catch(error){\n//         console.log(\"error: \", reportError)\n//     }\n// }\n// else{\n//     console.log(\"user already exists\")\n// }\nimport { GoogleAuthProvider } from \"firebase/auth\";\nconst provider = new GoogleAuthProvider();","map":{"version":3,"names":["GoogleAuthProvider","provider"],"sources":["/home/babi/Desktop/react/Smart-Cloth-Store/src/firebase/firebase.utils.js"],"sourcesContent":["// import {initializeApp} from 'firebase/app';\n// import {getAuth, GoogleAuthProvider, signInWithPopup} from \"firebase/auth\"\n// import {getFirestore, \n//     doc,\n//     setDoc,\n//     getDoc} from 'firebase/firestore';\n\n// const config = {\n//     apiKey: \"AIzaSyDFKanYXun65DroF3mKms8lwSbfLoX6szc\",\n//     authDomain: \"birehan-eco-db.firebaseapp.com\",\n//     projectId: \"birehan-eco-db\",\n//     storageBucket: \"birehan-eco-db.appspot.com\",\n//     messagingSenderId: \"185955401855\",\n//     appId: \"1:185955401855:web:0933f69cb26f46219aff4a\",\n//     measurementId: \"G-WN8GVTX54F\"\n//   };\n\n// const app = initializeApp(config);\n// export const auth = getAuth(app);\n// const provider = new GoogleAuthProvider();\n\n// // init services\n// export const db = getFirestore(app);\n\n// // provider.setCustomParameters({prompt: 'select_account'}); \n\n// export const signInWithGoogle = () => {\n//     signInWithPopup(auth, provider).then((result) => {\n        \n//         console.log(result)\n//     })\n//     .catch(error => console.log(error))\n// };\n\n\n// export const createUserProfileDocument = async(userAuth, additionalData) => {\n//     if(!userAuth) return;\n\n\n//     const userRef = doc(db, \"users\", userAuth.uid);\n//     const userSnapshot = await getDoc(userRef);\n\n//     if (!userSnapshot.exists()){\n\n//         const {displayName, email} = userAuth;\n//         const createdAt = new Date();\n\n//         try{\n//             await setDoc(userRef, {\n//                 displayName,\n//                 email,\n//                 createdAt,\n//                 ...additionalData\n//             })\n        \n//             console.log(\"document ID: \" + userRef.id)\n//         }\n//         catch(error){\n//             console.log(\"error: \", reportError)\n//         }\n        \n//     }\n//     return userRef;\n\n// }\n\n  // const colRef = collection(db, 'users');\n    // const snapShot = await getDocs(colRef);\n\n    // const querySnapshot = await getDocs(collection(db, \"users\"));\n\n    // let userExist = false;\n\n    // querySnapshot.forEach((doc) =>{\n    //     if (doc.id == userAuth.uid) userExist = true\n    //     })\n\n    // if (! userExist){\n    //     const {displayName, email} = userAuth;\n    //     const createdAt = new Date();\n\n    //     try{\n    //         const docRef = await addDoc(collection(db, \"users\"), {\n    //             displayName,\n    //             email,\n    //             createdAt,\n    //             ...additionalData\n    //         });\n    //         console.log(\"document ID: \" + docRef.id)\n    //     }\n    //     catch(error){\n    //         console.log(\"error: \", reportError)\n    //     }\n    // }\n    // else{\n    //     console.log(\"user already exists\")\n    // }\n\nimport { GoogleAuthProvider } from \"firebase/auth\";\n\nconst provider = new GoogleAuthProvider();\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AAGA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEE;AACE;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEJ,SAASA,kBAAT,QAAmC,eAAnC;AAEA,MAAMC,QAAQ,GAAG,IAAID,kBAAJ,EAAjB"},"metadata":{},"sourceType":"module"}